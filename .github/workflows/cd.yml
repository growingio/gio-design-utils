name: Continuous Delivery
on:
  push:
    branches:
      - master
jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14
      - name: Cache Node.js modules
        id: cache-node-modules
        uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install
  lint:
    name: Lint codes
    needs: install
    if: ${{ !startsWith(github.event.head_commit.message, 'docs') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14
      - name: Restore Node.js modules
        uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Cache lint reports
        uses: actions/cache@v2.1.4
        with:
          path: |
            eslint-report.json
          key: lint-reports-${{ github.sha }}
      - name: ESLint
        run: yarn eslint -f json -o eslint-report.json
  unit_test:
    name: Unit test
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14
      - name: Restore Node.js modules
        uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Cache test report
        uses: actions/cache@v2.1.4
        with:
          path: coverage/lcov.info
          key: test-report-${{ github.sha }}
      - name: Test
        run: yarn test --coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage/
  build:
    name: Build package
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14
      - name: Restore Node.js modules
        uses: actions/cache@v2.1.4
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Cache package
        uses: actions/cache@v2.1.4
        with:
          path: |
            dist
            es
          key: package-${{ github.sha }}
      - name: Build package
        run: yarn build
